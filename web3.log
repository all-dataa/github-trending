nohup: ignoring input
2024-11-06 start the job...
try at 0 to get trends~
when scrape HTTPSConnectionPool(host='github.com', port=443): Read timed out. occurs
scape ends

ai is reading, the info is:

when ai analyze, Error code: 400, with error text {"error":{"code":"1213","message":"未正常接收到prompt参数。"}} occurs...
ai ans is:
 None
Attempt 1 failed with error: write() argument must be str, not None
try at 1 to get trends~
scrape() status_code: 200
https://github.com/tw93/Pake
https://github.com/zellij-org/zellij
https://github.com/zed-industries/zed
https://github.com/katanemo/arch
https://github.com/gleam-lang/gleam
https://github.com/rustdesk/rustdesk
https://github.com/typst/typst
https://github.com/surrealdb/surrealdb
https://github.com/emilk/egui
https://github.com/dani-garcia/vaultwarden
https://github.com/dandavison/delta
https://github.com/spaceandtimelabs/sxt-proof-of-sql
https://github.com/RustScan/RustScan
https://github.com/pola-rs/polars
https://github.com/modrinth/code
https://github.com/FuelLabs/sway
https://github.com/kitao/pyxel
https://github.com/huggingface/candle
https://github.com/microsoft/openvmm
https://github.com/nushell/nushell
https://github.com/apache/arrow-rs
https://github.com/helix-editor/helix
https://github.com/paritytech/polkadot-sdk
https://github.com/awslabs/mountpoint-s3
scape ends

ai is reading, the info is:
1. [tw93 / Pake]:🤱🏻 Turn any webpage into a desktop app with Rust. 🤱🏻 利用 Rust 轻松构建轻量级多端桌面应用(https://github.com/tw93/Pake)
2. [zellij-org / zellij]:A terminal workspace with batteries included(https://github.com/zellij-org/zellij)
3. [zed-industries / zed]:Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.(https://github.com/zed-industries/zed)
4. [katanemo / arch]:Arch is an intelligent prompt gateway. Engineered with (fast) LLMs for the secure handling, robust observability, and seamless integration of prompts with APIs - all outside business logic. Built by the core contributors of Envoy proxy, on Envoy.(https://github.com/katanemo/arch)
5. [gleam-lang / gleam]:⭐️ A friendly language for building type-safe, scalable systems!(https://github.com/gleam-lang/gleam)
6. [rustdesk / rustdesk]:An open-source remote desktop application designed for self-hosting, as an alternative to TeamViewer.(https://github.com/rustdesk/rustdesk)
7. [typst / typst]:A new markup-based typesetting system that is powerful and easy to learn.(https://github.com/typst/typst)
8. [surrealdb / surrealdb]:A scalable, distributed, collaborative, document-graph database, for the realtime web(https://github.com/surrealdb/surrealdb)
9. [emilk / egui]:egui: an easy-to-use immediate mode GUI in Rust that runs on both web and native(https://github.com/emilk/egui)
10. [dani-garcia / vaultwarden]:Unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs(https://github.com/dani-garcia/vaultwarden)
11. [dandavison / delta]:A syntax-highlighting pager for git, diff, grep, and blame output(https://github.com/dandavison/delta)
12. [spaceandtimelabs / sxt-proof-of-sql]:Space and Time | Proof of SQL(https://github.com/spaceandtimelabs/sxt-proof-of-sql)
13. [RustScan / RustScan]:🤖 The Modern Port Scanner 🤖(https://github.com/RustScan/RustScan)
14. [pola-rs / polars]:Dataframes powered by a multithreaded, vectorized query engine, written in Rust(https://github.com/pola-rs/polars)
15. [modrinth / code]:The Modrinth monorepo containing all code which powers Modrinth!(https://github.com/modrinth/code)
16. [FuelLabs / sway]:🌴 Empowering everyone to build reliable and efficient smart contracts.(https://github.com/FuelLabs/sway)
17. [kitao / pyxel]:A retro game engine for Python(https://github.com/kitao/pyxel)
18. [huggingface / candle]:Minimalist ML framework for Rust(https://github.com/huggingface/candle)
19. [microsoft / openvmm]:Home of OpenVMM and OpenHCL.(https://github.com/microsoft/openvmm)
20. [nushell / nushell]:A new type of shell(https://github.com/nushell/nushell)
21. [apache / arrow-rs]:Official Rust implementation of Apache Arrow(https://github.com/apache/arrow-rs)
22. [helix-editor / helix]:A post-modern modal text editor.(https://github.com/helix-editor/helix)
23. [paritytech / polkadot-sdk]:The Parity Polkadot Blockchain SDK(https://github.com/paritytech/polkadot-sdk)
24. [awslabs / mountpoint-s3]:A simple, high-throughput file client for mounting an Amazon S3 bucket as a local file system.(https://github.com/awslabs/mountpoint-s3)

ai ans is:
 1. [tw93 / Pake]:🤱🏻 将任何网页转换为桌面应用，Rust轻松构建轻量级多端桌面应用(https://github.com/tw93/Pake)
2. [zellij-org / zellij]:内置电池的终端工作区(https://github.com/zellij-org/zellij)
3. [zed-industries / zed]:思维速度的代码 – Zed 是 Atom 和 Tree-sitter 的创造者推出的高性能、多人代码编辑器。(https://github.com/zed-industries/zed)
4. [katanemo / arch]:Arch 是一个智能提示网关。由 Envoy 代理的核心贡献者构建，在 Envoy 上运行，用于安全处理、强大可观察性和提示与 API 的无缝集成。(https://github.com/katanemo/arch)
5. [gleam-lang / gleam]:⭐️ 一种构建类型安全、可扩展系统的友好语言！(https://github.com/gleam-lang/gleam)
6. [rustdesk / rustdesk]:一个开源的远程桌面应用程序，旨在自托管，是 TeamViewer 的替代品。(https://github.com/rustdesk/rustdesk)
7. [typst / typst]:一种功能强大且易于学习的基于标记的排版系统。(https://github.com/typst/typst)
8. [surrealdb / surrealdb]:一个可扩展的、分布式的、协作的文档图数据库，适用于实时网络。(https://github.com/surrealdb/surrealdb)
9. [emilk / egui]:egui：一个易于使用的即时模式 GUI，在 Rust 上运行，同时支持网页和原生。(https://github.com/emilk/egui)
10. [dani-garcia / vaultwarden]:Rust 编写的非官方 Bitwarden 兼容服务器，以前称为 bitwarden_rs(https://github.com/dani-garcia/vaultwarden)
11. [dandavison / delta]:一个用于 git、diff、grep 和 blame 输出的语法高亮分页器。(https://github.com/dandavison/delta)
12. [spaceandtimelabs / sxt-proof-of-sql]:时空 | SQL 证明(https://github.com/spaceandtimelabs/sxt-proof-of-sql)
13. [RustScan / RustScan]:🤖 现代端口扫描器 🤖(https://github.com/RustScan/RustScan)
14. [pola-rs / polars]:由多线程、向量查询引擎提供支持的数据帧，用 Rust 编写。(https://github.com/pola-rs/polars)
15. [modrinth / code]:Modrinth 的 monorepo，包含所有支持 Modrinth 的代码。(https://github.com/modrinth/code)
16. [FuelLabs / sway]:🌴 帮助每个人构建可靠且高效的智能合约。(https://github.com/FuelLabs/sway)
17. [kitao / pyxel]:Python 的复古游戏引擎。(https://github.com/kitao/pyxel)
18. [huggingface / candle]:Rust 的简约机器学习框架。(https://github.com/huggingface/candle)
19. [microsoft / openvmm]:OpenVMM 和 OpenHCL 的家园。(https://github.com/microsoft/openvmm)
20. [nushell / nushell]:一种新型 shell。(https://github.com/nushell/nushell)
21. [apache / arrow-rs]:Apache Arrow 的官方 Rust 实现。(https://github.com/apache/arrow-rs)
22. [helix-editor / helix]:一个后现代模式文本编辑器。(https://github.com/helix-editor/helix)
23. [paritytech / polkadot-sdk]:Parity Polkadot 区块链 SDK。(https://github.com/paritytech/polkadot-sdk)
24. [awslabs / mountpoint-s3]:将 Amazon S3 存储桶挂载为本地文件系统的简单、高吞吐量文件客户端。(https://github.com/awslabs/mountpoint-s3)

最惊艳的项目：[zed-industries / zed] - Zed 是一款由 Atom 和 Tree-sitter 的创造者推出的高性能、多人代码编辑器，具有思维速度的编码体验。

今天趋势项目的关注领域和特点：主要集中在开源软件、工具和框架的开发，包括编程语言、数据库、编辑器、机器学习框架和游戏引擎等。特点是注重性能、可扩展性和用户友好性，许多项目都采用了 Rust 语言，以实现高效和安全的开发。产品联系: pxxhl@qq.com
2024-11-07 start the job...
try at 0 to get trends~
scrape() status_code: 200
https://github.com/vercel/turborepo
https://github.com/rust-lang/rust
https://github.com/zed-industries/zed
https://github.com/rustdesk/rustdesk
https://github.com/tauri-apps/tauri
https://github.com/ankitects/anki
https://github.com/firecracker-microvm/firecracker
https://github.com/neondatabase/neon
https://github.com/pola-rs/polars
https://github.com/aptos-labs/aptos-core
https://github.com/vectordotdev/vector
https://github.com/neovide/neovide
https://github.com/awslabs/mountpoint-s3
https://github.com/denoland/deno
https://github.com/zellij-org/zellij
https://github.com/shadowsocks/shadowsocks-rust
https://github.com/rust-lang/rustlings
https://github.com/hyperium/tonic
https://github.com/gitbutlerapp/gitbutler
https://github.com/qdrant/qdrant
https://github.com/lancedb/lancedb
https://github.com/web-infra-dev/rspack
scape ends

ai is reading, the info is:
1. [vercel / turborepo]:Build system optimized for JavaScript and TypeScript, written in Rust(https://github.com/vercel/turborepo)
2. [rust-lang / rust]:Empowering everyone to build reliable and efficient software.(https://github.com/rust-lang/rust)
3. [zed-industries / zed]:Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.(https://github.com/zed-industries/zed)
4. [rustdesk / rustdesk]:An open-source remote desktop application designed for self-hosting, as an alternative to TeamViewer.(https://github.com/rustdesk/rustdesk)
5. [tauri-apps / tauri]:Build smaller, faster, and more secure desktop and mobile applications with a web frontend.(https://github.com/tauri-apps/tauri)
6. [ankitects / anki]:Anki's shared backend and web components, and the Qt frontend(https://github.com/ankitects/anki)
7. [firecracker-microvm / firecracker]:Secure and fast microVMs for serverless computing.(https://github.com/firecracker-microvm/firecracker)
8. [neondatabase / neon]:Neon: Serverless Postgres. We separated storage and compute to offer autoscaling, code-like database branching, and scale to zero.(https://github.com/neondatabase/neon)
9. [pola-rs / polars]:Dataframes powered by a multithreaded, vectorized query engine, written in Rust(https://github.com/pola-rs/polars)
10. [aptos-labs / aptos-core]:Aptos is a layer 1 blockchain built to support the widespread use of blockchain through better technology and user experience.(https://github.com/aptos-labs/aptos-core)
11. [vectordotdev / vector]:A high-performance observability data pipeline.(https://github.com/vectordotdev/vector)
12. [neovide / neovide]:No Nonsense Neovim Client in Rust(https://github.com/neovide/neovide)
13. [awslabs / mountpoint-s3]:A simple, high-throughput file client for mounting an Amazon S3 bucket as a local file system.(https://github.com/awslabs/mountpoint-s3)
14. [denoland / deno]:A modern runtime for JavaScript and TypeScript.(https://github.com/denoland/deno)
15. [zellij-org / zellij]:A terminal workspace with batteries included(https://github.com/zellij-org/zellij)
16. [shadowsocks / shadowsocks-rust]:A Rust port of shadowsocks(https://github.com/shadowsocks/shadowsocks-rust)
17. [rust-lang / rustlings]:🦀 Small exercises to get you used to reading and writing Rust code!(https://github.com/rust-lang/rustlings)
18. [hyperium / tonic]:A native gRPC client & server implementation with async/await support.(https://github.com/hyperium/tonic)
19. [gitbutlerapp / gitbutler]:The GitButler version control client, backed by Git, powered by Tauri/Rust/Svelte(https://github.com/gitbutlerapp/gitbutler)
20. [qdrant / qdrant]:Qdrant - High-performance, massive-scale Vector Database and Vector Search Engine for the next generation of AI. Also available in the cloud https://cloud.qdrant.io/(https://github.com/qdrant/qdrant)
21. [lancedb / lancedb]:Developer-friendly, serverless vector database for AI applications. Easily add long-term memory to your LLM apps!(https://github.com/lancedb/lancedb)
22. [web-infra-dev / rspack]:The fast Rust-based web bundler with webpack-compatible API 🦀️(https://github.com/web-infra-dev/rspack)

ai ans is:
 1. [vercel / turborepo]:针对 JavaScript 和 TypeScript 优化的构建系统，由 Rust 编写（https://github.com/vercel/turborepo）
2. [rust-lang / rust]:赋予每个人构建可靠和高效软件的能力。（https://github.com/rust-lang/rust）
3. [zed-industries / zed]:以思想的速度编写代码 – Zed 是由 Atom 和 Tree-sitter 的创作者开发的性能出色、多人协作的代码编辑器。（https://github.com/zed-industries/zed）
4. [rustdesk / rustdesk]:一个开源的远程桌面应用程序，旨在自托管，作为 TeamViewer 的替代品。（https://github.com/rustdesk/rustdesk）
5. [tauri-apps / tauri]:使用 Web 前端构建更小、更快、更安全的桌面和移动应用程序。（https://github.com/tauri-apps/tauri）
6. [ankitects / anki]:Anki 的共享后端和 Web 组件，以及 Qt 前端（https://github.com/ankitects/anki）
7. [firecracker-microvm / firecracker]:用于无服务器计算的安全且快速的微虚拟机。（https://github.com/firecracker-microvm/firecracker）
8. [neondatabase / neon]:Neon：无服务器 Postgres。我们分离了存储和计算，以提供自动扩展、类似于代码的数据库分支和零扩展。（https://github.com/neondatabase/neon）
9. [pola-rs / polars]:由多线程、向量化查询引擎提供支持的数据帧，由 Rust 编写（https://github.com/pola-rs/polars）
10. [aptos-labs / aptos-core]:Aptos 是一个基于 Layer 1 的区块链，旨在通过更好的技术和用户体验来支持区块链的广泛应用。（https://github.com/aptos-labs/aptos-core）
11. [vectordotdev / vector]:高性能的可观察性数据处理管道。（https://github.com/vectordotdev/vector）
12. [neovide / neovide]:Rust 编写的无废话 Neovim 客户端（https://github.com/neovide/neovide）
13. [awslabs / mountpoint-s3]:一个简单、高吞吐量的文件客户端，可以将 Amazon S3 存储桶挂载为本地文件系统。（https://github.com/awslabs/mountpoint-s3）
14. [denoland / deno]:JavaScript 和 TypeScript 的现代运行时。（https://github.com/denoland/deno）
15. [zellij-org / zellij]:包含电池的终端工作空间（https://github.com/zellij-org/zellij）
16. [shadowsocks / shadowsocks-rust]:shadowsocks 的 Rust 版本（https://github.com/shadowsocks/shadowsocks-rust）
17. [rust-lang / rustlings]:🦀 小练习，帮助您习惯阅读和编写 Rust 代码！（https://github.com/rust-lang/rustlings）
18. [hyperium / tonic]:具有异步/等待支持的本地 gRPC 客户端和服务器实现。（https://github.com/hyperium/tonic）
19. [gitbutlerapp / gitbutler]:GitButler 版本控制客户端，由 Git 支持，由 Tauri/Rust/Svelte 驱动（https://github.com/gitbutlerapp/gitbutler）
20. [qdrant / qdrant]:Qdrant - 高性能、大规模向量数据库和向量搜索引擎，用于下一代 AI。同时也在云端可用 https://cloud.qdrant.io/（https://github.com/qdrant/qdrant）
21. [lancedb / lancedb]:为 AI 应用程序提供开发者友好的、无服务器的向量数据库。轻松为您的 LLM 应用程序添加长期记忆！（https://github.com/lancedb/lancedb）
22. [web-infra-dev / rspack]:快速的基于 Rust 的 Web 打包器，具有与 webpack 兼容的 API 🦀️（https://github.com/web-infra-dev/rspack）

惊艳项目安利：[zed-industries / zed] - 以思想的速度编写代码，由 Atom 和 Tree-sitter 的创作者开发的性能出色、多人协作的代码编辑器。

今日趋势项目关注的领域和特点：今天的项目主要集中在性能优化、安全性和用户体验上，涉及了从构建系统到数据库，再到区块链和人工智能应用等多个领域。产品联系: pxxhl@qq.com
